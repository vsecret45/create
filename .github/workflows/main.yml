name: AI Code Review
on:
  workflow_dispatch:
  pull_request:

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      AI_API_KEY: ${{ secrets.AI_API_KEY }}
      AI_MODEL:   ${{ secrets.AI_MODEL }}
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Build prompt
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1 || true
          git diff --unified=0 origin/${{ github.base_ref }} > diff.patch || true
          cat diff.patch > prompt.txt || true
          echo " " >> prompt.txt

      - name: Call OpenAI
        id: ask
        run: |
          body=$(jq -n --rawfile p prompt.txt \
            --arg model "$AI_MODEL" \
            '{model:$model, messages:[
              {role:"system",content:"Tu es un relecteur de code strict. RÃ©ponse courte et actionnable."},
              {role:"user",content:$p}] }')
          resp=$(curl -sS -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Authorization: Bearer $AI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$body")
          echo "resp<<EOF" >> $GITHUB_OUTPUT
          echo "$resp"     >> $GITHUB_OUTPUT
          echo "EOF"       >> $GITHUB_OUTPUT

      - name: Extract text
        id: text
        run: |
          echo "txt=$(echo '${{ steps.ask.outputs.resp }}' | jq -r '.choices[0].message.content')" >> $GITHUB_OUTPUT

      - name: Write to job summary (si pas de PR)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "### Relecture IA" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.text.outputs.txt }}' >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR (si PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "### Relecture IA\n\n${{ steps.text.outputs.txt }}"
            })
