name: AI Code Review

on:
  workflow_dispatch:   # lancement manuel
  pull_request:        # commente automatiquement sur une PR

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      AI_API_URL: ${{ secrets.AI_API_URL }}
      AI_API_KEY: ${{ secrets.AI_API_KEY }}
      AI_MODEL: ${{ secrets.AI_MODEL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Build prompt
        id: diff
        shell: bash
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1 || true
          git diff --unified=0 origin/${{ github.base_ref }} > diff.patch || true
          
          if [ ! -s diff.patch ]; then
            echo "Aucun changement détecté." > prompt.txt
          else
            cat <<'TXT' > prompt.txt
Tu es un relecteur de code strict. Relis le diff suivant et propose des remarques concrètes.
TXT
            cat diff.patch >> prompt.txt
          fi

      - name: Call OpenAI
        id: ask
        run: |
          body=$(jq -n --rawfile p prompt.txt \
            '{model: env.AI_MODEL, messages:[{role:"system",content:"Tu es un relecteur de code strict."}, {role:"user",content:$p}]}')
          
          resp=$(curl -sS -X POST "$AI_API_URL" \
            -H "Authorization: Bearer $AI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$body")

          echo "resp<<EOF" >> $GITHUB_OUTPUT
          echo "$resp" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract text
        id: text
        run: |
          echo "txt=$(echo '${{ steps.ask.outputs.resp }}' | jq -r '.choices[0].message.content')" >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "### Relecture IA\n\n${{ steps.text.outputs.txt }}"
            })
